// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/timeprovider/interfaces.go
//
// Generated by this command:
//
//	mockgen -source pkg/timeprovider/interfaces.go -package mocks -destination internal/app/index/test/mocks/interfaces.mock.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTimeProvider is a mock of TimeProvider interface.
type MockTimeProvider struct {
	ctrl     *gomock.Controller
	recorder *MockTimeProviderMockRecorder
	isgomock struct{}
}

// MockTimeProviderMockRecorder is the mock recorder for MockTimeProvider.
type MockTimeProviderMockRecorder struct {
	mock *MockTimeProvider
}

// NewMockTimeProvider creates a new mock instance.
func NewMockTimeProvider(ctrl *gomock.Controller) *MockTimeProvider {
	mock := &MockTimeProvider{ctrl: ctrl}
	mock.recorder = &MockTimeProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTimeProvider) EXPECT() *MockTimeProviderMockRecorder {
	return m.recorder
}

// CurrentYear mocks base method.
func (m *MockTimeProvider) CurrentYear() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CurrentYear")
	ret0, _ := ret[0].(int)
	return ret0
}

// CurrentYear indicates an expected call of CurrentYear.
func (mr *MockTimeProviderMockRecorder) CurrentYear() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CurrentYear", reflect.TypeOf((*MockTimeProvider)(nil).CurrentYear))
}

// IsCurrentMonth mocks base method.
func (m *MockTimeProvider) IsCurrentMonth(month int) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsCurrentMonth", month)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsCurrentMonth indicates an expected call of IsCurrentMonth.
func (mr *MockTimeProviderMockRecorder) IsCurrentMonth(month any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsCurrentMonth", reflect.TypeOf((*MockTimeProvider)(nil).IsCurrentMonth), month)
}

// IsCurrentYear mocks base method.
func (m *MockTimeProvider) IsCurrentYear(year int) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsCurrentYear", year)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsCurrentYear indicates an expected call of IsCurrentYear.
func (mr *MockTimeProviderMockRecorder) IsCurrentYear(year any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsCurrentYear", reflect.TypeOf((*MockTimeProvider)(nil).IsCurrentYear), year)
}
