package itemcomponents

import (
	categorycomponents "github.com/tksasha/balance/internal/components/categories"
	commoncomponents "github.com/tksasha/balance/internal/components/common"
	"github.com/tksasha/balance/internal/decorators"
	h "github.com/tksasha/balance/internal/helpers"
)

templ Form(item *decorators.ItemDecorator, categories *decorators.CategoriesDecorator) {
	<form
		if item.ID == 0 {
			hx-post={ string(h.ItemsURL(nil)) }
		} else {
			hx-patch={ string(h.ItemURL(item)) }
		}
		hx-swap="outerHTML"
	>
		<div class="mb-3">
			<label class="form-label">Date</label>
			<input
				name="date"
				if item.Date != "" {
					value={ item.Date }
				}
				if item.Errors.Has("date") {
					class="form-control is-invalid"
				} else {
					class="form-control"
				}
				type="text"
			/>
			if item.Errors.Has("date") {
				<div class="invalid-feedback">
					<ul>
						for _, err := range item.Errors.Get("date") {
							<li>{ err }</li>
						}
					</ul>
				</div>
			}
		</div>
		<div class="mb-3">
			<label class="form-label">Currency</label>
			<input
				name="currency"
				value={ item.Currency.Code }
				class="form-control"
				readonly
			/>
		</div>
		<div class="mb-3">
			<label class="form-label">Sum</label>
			<input
				name="formula"
				value={ item.Formula }
				if item.Errors.Has("formula") {
					class="form-control is-invalid"
				} else {
					class="form-control"
				}
				type="text"
			/>
			if item.Errors.Has("formula") {
				<div class="invalid-feedback">
					<ul>
						for _, err := range item.Errors.Get("formula") {
							<li>{ err }</li>
						}
					</ul>
				</div>
			}
		</div>
		<div class="mb-3">
			<label class="form-label">Category</label>
			@categorycomponents.Select(categories)
			if item.Errors.Has("category_id") {
				<div class="invalid-feedback">
					<ul>
						for _, err := range item.Errors.Get("category_id") {
							<li>{ err }</li>
						}
					</ul>
				</div>
			}
		</div>
		<div class="mb-3">
			<label class="form-label">Description</label>
			<input
				name="description"
				value={ item.Description }
				class="form-control"
				type="text"
			/>
		</div>
		<div class="clearfix">
			if item.ID == 0 {
				<button class="btn btn-primary float-start" type="submit">
					Create Item
					@commoncomponents.Spinner()
				</button>
			} else {
				<button class="btn btn-primary float-start" type="submit">
					Update Item
					@commoncomponents.Spinner()
				</button>
				<button
					hx-confirm="Are you sure?"
					hx-delete={ string(h.ItemURL(item)) }
					class="btn btn-outline-danger float-end"
				>
					Delete Item
				</button>
			}
		</div>
	</form>
}
