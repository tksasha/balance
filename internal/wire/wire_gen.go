// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"context"
	components2 "github.com/tksasha/balance/internal/core/cash/components"
	handlers2 "github.com/tksasha/balance/internal/core/cash/handlers"
	"github.com/tksasha/balance/internal/core/cash/repository"
	"github.com/tksasha/balance/internal/core/cash/service"
	components3 "github.com/tksasha/balance/internal/core/category/components"
	handlers3 "github.com/tksasha/balance/internal/core/category/handlers"
	repository2 "github.com/tksasha/balance/internal/core/category/repository"
	service2 "github.com/tksasha/balance/internal/core/category/service"
	"github.com/tksasha/balance/internal/core/common/components"
	"github.com/tksasha/balance/internal/core/common/handlers"
	"github.com/tksasha/balance/internal/core/common/helpers"
	"github.com/tksasha/balance/internal/core/common/providers"
	"github.com/tksasha/balance/internal/core/common/repositories"
	components4 "github.com/tksasha/balance/internal/core/indexpage/components"
	"github.com/tksasha/balance/internal/core/indexpage/handler"
	repository3 "github.com/tksasha/balance/internal/core/indexpage/repository"
	service3 "github.com/tksasha/balance/internal/core/indexpage/service"
	components5 "github.com/tksasha/balance/internal/core/item/components"
	handlers4 "github.com/tksasha/balance/internal/core/item/handlers"
	repository4 "github.com/tksasha/balance/internal/core/item/repository"
	service4 "github.com/tksasha/balance/internal/core/item/service"
	"github.com/tksasha/balance/internal/db"
	"github.com/tksasha/balance/internal/db/nameprovider"
	"github.com/tksasha/balance/internal/server"
	"github.com/tksasha/balance/internal/server/config"
	"github.com/tksasha/balance/internal/server/middlewares"
	"github.com/tksasha/balance/internal/server/routes"
)

// Injectors from wire.go:

func InitializeServer() *server.Server {
	configConfig := config.New()
	baseHandler := handlers.NewBaseHandler()
	baseRepository := repositories.NewBaseRepository()
	contextContext := context.Background()
	provider := nameprovider.New()
	sqlDB := db.Open(contextContext, provider)
	repositoryRepository := repository.New(baseRepository, sqlDB)
	serviceService := service.New(repositoryRepository)
	timeProvider := providers.NewTimeProvider()
	helpersHelpers := helpers.New(timeProvider)
	baseComponent := components.NewBaseComponent(helpersHelpers)
	cashComponent := components2.NewCashComponent(baseComponent)
	createHandler := handlers2.NewCreateHandler(baseHandler, serviceService, cashComponent)
	deleteHandler := handlers2.NewDeleteHandler(baseHandler, serviceService)
	editHandler := handlers2.NewEditHandler(baseHandler, serviceService, cashComponent)
	listHandler := handlers2.NewListHandler(baseHandler, serviceService, cashComponent)
	newHandler := handlers2.NewNewHandler(baseHandler, cashComponent)
	updateHandler := handlers2.NewUpdateHandler(baseHandler, serviceService, cashComponent)
	repository5 := repository2.New(baseRepository, sqlDB)
	service5 := service2.New(repository5)
	categoryComponent := components3.NewCategoryComponent(baseComponent)
	handlersCreateHandler := handlers3.NewCreateHandler(baseHandler, service5, categoryComponent)
	handlersDeleteHandler := handlers3.NewDeleteHandler(baseHandler, service5)
	handlersEditHandler := handlers3.NewEditHandler(baseHandler, service5, categoryComponent)
	handlersListHandler := handlers3.NewListHandler(baseHandler, service5, categoryComponent)
	handlersUpdateHandler := handlers3.NewUpdateHandler(baseHandler, service5, categoryComponent)
	repository6 := repository3.New(baseRepository, sqlDB)
	service6 := service3.New(repository6)
	monthsComponent := components4.NewMonthsComponent(baseComponent)
	indexPageComponent := components4.NewIndexPageComponent(baseComponent, monthsComponent)
	handlerHandler := handler.New(baseHandler, service6, service5, indexPageComponent)
	repository7 := repository4.New(baseRepository, sqlDB)
	service7 := service4.New(repository7, repository5)
	itemsComponent := components5.NewItemsComponent(baseComponent)
	createHandler2 := handlers4.NewCreateHandler(baseHandler, service7, service5, itemsComponent)
	editHandler2 := handlers4.NewEditHandler(baseHandler, service7, service5, itemsComponent)
	listHandler2 := handlers4.NewListHandler(baseHandler, service7, itemsComponent)
	updateHandler2 := handlers4.NewUpdateHandler(baseHandler, service7, service5, itemsComponent)
	routesRoutes := routes.New(createHandler, deleteHandler, editHandler, listHandler, newHandler, updateHandler, handlersCreateHandler, handlersDeleteHandler, handlersEditHandler, handlersListHandler, handlersUpdateHandler, handlerHandler, createHandler2, editHandler2, listHandler2, updateHandler2)
	v := middlewares.New()
	serverServer := server.New(configConfig, routesRoutes, v)
	return serverServer
}
